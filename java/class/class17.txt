Various ways to declare methods in java
======================================
There are four ways to declare methods in java.

1) No returntype With No argument method 

2) No returntype With argument method

3) With returntype With No argument method 

4) With returntype With arguemnt method 


1) No returntype With No argument method 
----------------------------------------
If we don't have arguments then we need to ask input values inside callie method.


Q) Write a java program to perform sum of two numbers ?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method
		sum();
	}

	//callie method 
	public static void sum()
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		System.out.println("Enter the second number :");
		int b=sc.nextInt();
		//logic
		int c=a+b;
		System.out.println("sum of two numbers is ="+c);
	}
}

Q) Write a java program to find out given number is even or odd?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		find();
	}

	//callie method 
	public static void find()
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();

		if((n & 1)==0)   
			System.out.println("It is even number");
		else
			System.out.println("It is odd number");
	}	
}


2) No returntype With argument method
-------------------------------------
If we have arguments then we need to ask input values inside main method.

Number of arguments depends upon number if input values.




Q) Write a java program to perform sum of two numbers?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a=sc.nextInt();
		
		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method 
		sum(a,b);
	}

	//callie method 
	public static void sum(int a,int b)
	{
		int c=a+b;
		System.out.println("sum of two numbers is ="+c);
	}
}


Q) Write a java program to find out cube of a given number?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the number :");
		int n=sc.nextInt();

		//caller method
		cube(n);
	}
	//callie method 
	public static  void cube(int n)
	{
		int result=n*n*n;
		System.out.println("Cube of a given number is ="+result);
	}
}


3) With returntype With No argument method 
-------------------------------------------
A returntype is completely depends upon output datatype.


Q) Write a java program to display sum of two numbers?


import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		int k=sum();
		System.out.println("sum of two numbers is ="+k);
	}
	
	//callie method
	public static int sum()
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a=sc.nextInt();

		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//logic
		int c=a+b;

		return c;
	}
}

Q) Write a java program to find out area of a circle ?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method
		float k=circle();
		System.out.println("Area of a circle is ="+k);
	}
	
	//callie method
	public static float circle()
	{
		Scanner sc=new Scanner(System.in);

		System.out.println("Enter the radius :");
		int r=sc.nextInt();

		//logic
		float area=3.14f*r*r;

		return area;
	}
}


4) With returntype With arguemnt method 
---------------------------------------

Q) Write a java program to perform sum of two numbers?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the first number :");
		int a=sc.nextInt();

		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method 
		System.out.println("sum of two numbers is ="+sum(a,b));

	}
	
	//callie method
	public static int sum(int a, int b)
	{
			int c=a+b;

			return c;
	}
}

Q) Write a java program to find out given number is positive or negative?

approach1
---------
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();

		//caller method
		System.out.println(find(n));

	}
	//callie method
	public static String find(int n)
	{
		if(n>0)
			return "It is positive number";
		else
			return "It is negative number";
	}
}

approach2
---------
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();

		//caller method
		if(find(n))
			System.out.println("It is positive number");
		else
			System.out.println("It is negative number");

	}
	//callie method
	public static boolean find(int n)
	{
		if(n>0)
			return true;
		else
			return false;
	}
}

Recursion
=========
A method which call itself for many number of times is called recursion.

Recursion is similar to loopings.

Whenever we use recursion , we should not use loops.


Q) Write a java program to display 10 natural numbers without using loops?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		//caller method 
		display(1);
	}

	//callie method
	public static void display(int i)
	{
		if(i<=10)
		{
			System.out.print(i+" ");
			display(i+1);
		}
	}
}

Q) Write a java program to perform sum of two numbers without using arithmetic operator(+)?

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter the first number :");
		int a=sc.nextInt();

		System.out.println("Enter the second number :");
		int b=sc.nextInt();

		//caller method
		System.out.println(sum(a,b));
	}

	//callie method
	public static int sum(int a,int b)
	{
		if(a==0)
			return b;

		return sum(--a,++b);
	}
}


Q) Write a java program to find out factorial of a given number using recursion?

input:
	n=5

output:
	120 

ex:

import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		//caller method
		System.out.println(factorial(n));
	}
	//callie method
	public static int factorial(int n)
	{
		if(n<0)
			return -1;

		if(n==0)
			return 1;

		return n*factorial(n-1); // 5 * 4 * 3 * 2 * 1 * 1
	}
}

Q) Write a java program to find out Nth element of fibonacci series?

fibonacci series : 0 1 1 2 3 5 8 

input:
	4

output:
	2

ex:
---
import java.util.Scanner;
class Test  
{
	public static void main(String[] args) 
	{
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Enter the number :");
		int n=sc.nextInt();
		
		//caller method
		System.out.println(fib(n));
	}
	//callie method
	public static int fib(int n)
	{
		if(n==0 || n==1)
			return 0;

		if(n==2)
			return 1;

		return fib(n-1)+fib(n-2);
	}
}


Q) Write a java program to check given number is palindrome or not?

class Test  
{
	public static void main(String[] args) 
	{
		int num=121;
		int original=num;
		int reversed=0;

		//caller method
		if(isPalindrome(num,original,reversed))
			System.out.println("It is a palindrome number");
		else
			System.out.println("It is not a palindrome number");

	}
	//callie method
	public static boolean isPalindrome(int num,int original,int reversed)
	{
		if(num==0)
		{
			return original==reversed;
		}

		reversed=reversed*10+num%10;

		return isPalindrome(num/10,original,reversed);
	}
}


LOOP Patterns
=============

1)
1 1 1 1 
2 2 2 2 
3 3 3 3
4 4 4 4 


class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//columns
			for(int j=1;j<=4;j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println();
		}
		
	}
	
}

2) 
1 2 3 4
1 2 3 4
1 2 3 4
1 2 3 4 


class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//columns
			for(int j=1;j<=4;j++)
			{
				System.out.print(j+" ");
			}
			//new line
			System.out.println();
		}
		
	}
	
}

3)
* * * * 
* * * *
* * * *
* * * * 



class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//columns
			for(int j=1;j<=4;j++)
			{
				System.out.print("* ");
			}
			//new line
			System.out.println();
		}
		
	}
	
}

4)
4 4 4 4 
3 3 3 3 
2 2 2 2
1 1 1 1 


class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=4;i>=1;i--)
		{
			//columns
			for(int j=1;j<=4;j++)
			{
				System.out.print(i+" ");
			}
			//new line
			System.out.println();
		}
		
	}
	
}

5)
A A A A 
B B B B
C C C C 
D D D D 



class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(char i='A';i<='D';i++)
		{
			//columns
			for(char j='A';j<='D';j++)
			{
				System.out.print(i+" ");
			}
			//new line 
			System.out.println();
		}
		
	}
	
}

6)
D D D D 
C C C C 
B B B B 
A A A A


class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(char i='D';i>='A';i--)
		{
			//columns
			for(char j='A';j<='D';j++)
			{
				System.out.print(i+" ");
			}
			//new line 
			System.out.println();
		}
		
	}
	
}

7)
* * * * 
*     *
*     *
* * * * 


class Test  
{
	public static void main(String[] args) 
	{
		//rows
		for(int i=1;i<=4;i++)
		{
			//cols
			for(int j=1;j<=4;j++)
			{
				if(i==1 || i==4 || j==1 || j==4)
					System.out.print("* ");
				else
					System.out.print("  ");
			}
			//new line
			System.out.println();
		}
		
	}
	
}























































































































 


























