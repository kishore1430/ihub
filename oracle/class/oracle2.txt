create command
==============
It is used to create a table in a database.

syntax:
	create table <table_name>(col1 datatype(size),
					col2 datatype(size),....., colN datatype(size));

ex:
	create table student(sno number(3),sname varchar2(10),sadd varchar2(12));

	create table dept(deptno number(3),dname varchar2(10),dloc varchar2(12));

	create table emp(eid number(3),ename varchar2(10),esal number(10,2),
				deptno number(3),job varchar2(10), comm number(6));


describe command
=================
It is used to see the structure of the database.

syntax:
	desc <table_name>;

ex:
	desc student;
	desc emp;
	desc dept; 


Insert command
================
It is used to insert a record/row in a database table.

syntax:
	insert into <table_name> values(val1,val2,...,valN);

ex:
	insert into student values(101,'raja','hyd');

	insert into student values('ravi',102,'delhi'); //invalid 

	insert into student values(102,'ravi'); //invalid 

	insert into student values(102,'ravi',null); 

approach2
---------
	insert into student(sno,sname,sadd) values(103,'ramana','vizag');

	insert into student(sno,sname) values(104,'ramulu');

approach3
---------
	Using '&' symbol we can read dynamic inputs.

	insert into student values(&sno,'&sname','&sadd');


Commit command
==============
It is used to make the changes permanent to database.

syntax:
	commit;


emp table
=========
create table emp(eid number(3),ename varchar2(10),esal number(10,2),
				deptno number(3),job varchar2(10), comm number(6));

insert into emp values(201,'Alan',8000,10,'Clerk',null);
insert into emp values(202,'Jessica',18000,10,'Clerk',500);

insert into emp values(203,'Nelson',48000,20,'HR',500);
insert into emp values(204,'Branda',28000,20,'HR',900);

insert into emp values(205,'Kelvin',32000,30,'Manager',900);
insert into emp values(206,'Brook',17000,30,'Manager',1000);

commit;


dept table
==========
create table dept(deptno number(3),dname varchar2(10),dloc varchar2(12));

insert into dept values(10,'ECE','HYD');
insert into dept values(20,'EEE','PUNE');
insert into dept values(30,'CSE','DELHI');
insert into dept values(40,'MEC','VIZAG');
commit;


select command
==============
It is used to select/retrieve the records from database table.

syntax:
------
	select * from <table_name>

	Here '*' means all rows and columns.

	ex:
		select * from student;
		select * from emp;
		select * from dept;

Projection
==========
Selecting specific columns from database table is called projection.
ex:
	select sno,sname,sadd from student;
	select sno,sname from student;
	select sno from student;

In select command we can perform arithmetic operations also.

ex:
	select sno-100 from student;
	select sno+100 from student;
	select sno+100,sname,sadd from student;

Column Alias
=============
A userdefined heading given to a column is called column alias.

Column alias we can apply to any column.

Column alias is temperory.Once the query is executed we will loss the column alias.

ex:
	select sno+100 as SNO,sname,sadd from student;

	select sno as ROLL_NO,sname as NAME,sadd as CITY from student;

Interview Queries
==================

Q) Write a query to display number of tables present in database?

	select * from tab;


Q) Write a query to see logical database name?

	select * from global_name; //10g --> XE 
				   //11g --> ORCL 	
	
Q) Write a query to see the list of users present in a database?

	select username from all_users;

Q) Write a query to display all employees information from employee table?

	select * from emp;


Q) Write a query to display employee id , employee name and employee salary from employee table?

	select eid,ename,esal from emp;


Q) Write a query to dispaly employee id, employee name, employee salary and annual salary as    
   ANNUAL_SALARY of each employee from employee table?

	select eid,ename,esal,esal*12 as ANNUAL_SALARY from emp;

where clause
=============
It is used to select specific records from database table.

syntax:
	select * from <table_name> where condition;

ex:
	select * from student where sno=101;

	select * from student where sname='ramana';

	select * from student where sadd='vizag';

	select * from student where sadd='VIZAG'; // No Rows Selected 
	

Interview Queries
=================

Q) Write a query to display student information who is living in hyd?

	select * from student where sadd='hyd';

Q) Write a query to display employees information those who are working in 10 department?

	select * from emp where deptno=10;


Q) Write a query to display employees information those who are working as a Manager?

	select * from emp where job='Manager';



Q) Write a query to display employees information whose comm is null?

	select * from emp where comm=null; // no rows selected 

is null
-------
	is null is a operator which is used to select the records based on null values.

	select * from emp where comm is null;	


Q) Write a query to display employees information whose salary is greater then 35000?

	select * from emp where esal>35000;



EPAM interview Question
========================
Unberry and Colorberry are best friends. One day colorberry came accross a unique game
which tells how long friendship between two friends will last. Colorberry told unberry about the game insist him to play it with him.unberry agreed and they both went ahead to try the game. 

The game is describes as follows:

Write two person names:

If letter common in their name is >=2 and <5, then their firendship will last 10 years

If letter common in their name is >5, then their friendship will last 15 yrs.

Write a function to mimic this game.

Example1:

Input:
	Unberry
	Colorberry
Output:
	10 

Since 4 letters (b,e,r,y) are common and according to game rules friendship years will be 10.

constriants:
1 <= names length <=200
Matching of letters is case insensitive i.e N and n are common letters.

ex:

import java.util.*;
class Test  
{
	public static void main(String[] args) 
	{
		String name1="Unberry";
		String name2="Colorberry";

		//caller method
		int result=calculateYears(name1.toLowerCase(),name2.toLowerCase());
		System.out.println(result);
	}
	//static method
	public static int calculateYears(String name1,String name2)
	{
		HashSet<Character> set1=new HashSet<Character>();
		HashSet<Character> set2=new HashSet<Character>();	
		
		for(char c:name1.toCharArray())
		{
			set1.add(c);
		}

		for(char c:name2.toCharArray())
		{
			set2.add(c);
		}

		set1.retainAll(set2);

		int commonCharacters=set1.size();

		if(commonCharacters>=2 && commonCharacters<5)
			return 10;
		else if(commonCharacters>5)
			return 15;
		else
			return 0;
	}
}